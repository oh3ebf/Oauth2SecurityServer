logging.level.org.springframework.web=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.security=INFO
#logging.file.max-history= 
#logging.file.max-size=
#logging.level.*=
#trace=true
#debug=true

#logging.file=log.txt
application.client.id=fooClientIdPassword
application.client.password=secret
application.oauth.server.token.service=http://localhost:8081/oauth/check_token

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------

# EMBEDDED SERVER CONFIGURATION
server.context-path=/oauthadmin
server.address=127.0.0.1
server.port=8081

# DataSource settings: set here your own configurations for the database 
# connection. 

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://db.example.com:3306/oauth_db
spring.datasource.username = user
spring.datasource.password = password

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false
# Initialize database based on sql files
spring.jpa.generate-ddl = false

# Hibernate ddl auto (create, create-drop, update, none, validate)
spring.jpa.hibernate.ddl-auto = create

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
